CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

ENABLE_LANGUAGE(CXX)

SET(CMAKE_MODULE_PATH
    ${CMAKE_SOURCE_DIR}/cmake
    ${CMAKE_MODULE_PATH})

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(glfw3 REQUIRED)
FIND_PACKAGE(DevIL REQUIRED)
FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem)

PROJECT(jass)

IF(CMAKE_BUILD_TYPE MATCHES "")
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

IF(NOT (CMAKE_BUILD_TYPE MATCHES "Debug"))
    MESSAGE(WARNING "Only Debug build is configured")
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall -Wextra -Wno-unused-parameter -Wno-missing-braces -Wpedantic -D_DEBUG -fsanitize=address -fno-omit-frame-pointer")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall -Wextra -Wno-unused-parameter -Wpedantic -D_DEBUG")
ENDIF()

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY
    ${CMAKE_SOURCE_DIR}/exe)

FILE(GLOB_RECURSE SRC_FILES ${PROJECT_SOURCE_DIR}/src/*.cc)

ADD_EXECUTABLE(jass ${SRC_FILES})

IF(APPLE)

INCLUDE_DIRECTORIES(
  ${OPENGL_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIRS}
  ${GLM_INCLUDE_DIR}
  ${GLFW3_INCLUDE_DIR}
  ${IL_INCLUDE_DIR}
  ${Boost_INCLUDE_DIRS}
  src
)

TARGET_LINK_LIBRARIES(jass
  ${OPENGL_LIBRARIES}
  ${GLEW_LIBRARIES}
  ${GLFW3_LIBRARY}
  ${IL_LIBRARIES}
  ${Boost_LIBRARIES}
)

ELSE()

INCLUDE_DIRECTORIES(
  ${OPENGL_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIRS}
  ${GLM_INCLUDE_DIR}
  ${IL_INCLUDE_DIR}
  ${Boost_INCLUDE_DIRS}
  src
)

TARGET_LINK_LIBRARIES(jass
  ${OPENGL_LIBRARIES}
  ${GLEW_LIBRARIES}
  glfw
  ${IL_LIBRARIES}
  ${Boost_LIBRARIES}
)

ENDIF()

SET_PROPERTY(TARGET jass PROPERTY CXX_STANDARD 14)

# get_cmake_property(_variableNames VARIABLES)
# foreach (_variableName ${_variableNames})
#   message(STATUS "${_variableName}=${${_variableName}}")
# endforeach()
